<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <system.webServer>
    <handlers>
      <add name="iisnode" path="server.js" verb="*" modules="iisnode" />
    </handlers>
    <rewrite>
      <rules>
        <!-- Do not interfere with requests for node-inspector debugging -->
        <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
          <match url="^server.js\/debug[\/]?" />
        </rule>

        <!-- First we consider whether the incoming URL matches a physical file in the /build folder -->
        <rule name="StaticContent">
          <action type="Rewrite" url="build{REQUEST_URI}" />
        </rule>

        <!-- All other URLs are mapped to the Node.js application entry point -->
        <rule name="DynamicContent" stopProcessing="true">
          <conditions>
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True" />
          </conditions>
          <action type="Rewrite" url="server.js" />
        </rule>
      </rules>
    </rewrite>

    <!-- Make sure error pages are not cached -->
    <httpErrors existingResponse="PassThrough" />
    
    <iisnode 
      nodeProcessCommandLine="node.exe"
      watchedFiles="web.config;*.js"
      loggingEnabled="true"
      logDirectory="iisnode"
      debuggingEnabled="true"
      debugHeaderEnabled="false"
      debuggerPortRange="5058-6058"
      maxNamedPipeConnectionRetry="3"
      namedPipeConnectionRetryDelay="2000" />
      
    <!-- Indicates that the server.js file is a Node.js application to be handled by the iisnode module -->
    <modules>
      <add name="iisnode" />
    </modules>
  </system.webServer>
</configuration>
